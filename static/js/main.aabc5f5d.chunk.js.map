{"version":3,"sources":["components/TodoItem.js","components/AddItem.js","todoData.js","App.js","index.js"],"names":["TodoItem","props","className","type","checked","item","completed","onChange","handleChange","id","style","fontStyle","color","textDecoration","text","AddItem","onSubmit","this","handleSubmit","placeholder","value","event","handleValueChange","React","Component","todosData","App","bind","state","todos","setState","prevState","map","todo","target","updatedTodos","newTodo","push","preventDefault","todoItem","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAoBeA,MAlBf,SAAkBC,GAMjB,OACC,yBAAKC,UAAU,aACb,2BAAOC,KAAK,WACZC,QAAWH,EAAMI,KAAKC,UACtBC,SAAY,kBAAMN,EAAMO,aAAaP,EAAMI,KAAKI,OAEhD,uBAAGC,MAAOT,EAAMI,KAAKC,UAXD,CACtBK,UAAW,SACXC,MAAO,UACPC,eAAgB,gBAQmC,MAAOZ,EAAMI,KAAKS,QCGxDC,E,uKAbL,IAAD,OACP,OACE,0BAAMC,SAAUC,KAAKhB,MAAMiB,cAC5B,2BAAOf,KAAM,OACbgB,YAAY,eACZC,MAAOH,KAAKhB,MAAMmB,MAClBb,SAAU,SAACc,GAAD,OAAW,EAAKpB,MAAMqB,kBAAkBD,MAElD,2BAAOlB,KAAK,SAASiB,MAAM,e,GAVRG,IAAMC,WCAbC,EAFG,GCiEHC,E,kDA3Dd,WAAYzB,GAAO,IAAD,8BACjB,cAAMA,IACDO,aAAe,EAAKA,aAAamB,KAAlB,gBACpB,EAAKL,kBAAoB,EAAKA,kBAAkBK,KAAvB,gBACtB,EAAKT,aAAe,EAAKA,aAAaS,KAAlB,gBACvB,EAAKC,MAAQ,CACZnB,GAAI,EACDK,KAAK,GACRe,MAAOJ,GARS,E,yDAYJhB,GACPQ,KAAKa,UAAS,SAAAC,GAUV,MAAO,CACHF,MAViBE,EAAUF,MAAMG,KAAI,SAAAC,GACrC,OAAIA,EAAKxB,KAAOA,EACL,2BACAwB,GADP,IAEI3B,WAAY2B,EAAK3B,YAGlB2B,W,wCAQDZ,GAClBJ,KAAKa,SAAS,CAAChB,KAAMO,EAAMa,OAAOd,U,mCAGvBC,GACVJ,KAAKa,UAAS,SAACC,GAAD,MAAgB,CAACtB,GAAIsB,EAAUtB,GAAK,MAClD,IAAM0B,EAAY,YAAOlB,KAAKW,MAAMC,OAC9BO,EAAU,CAAC3B,GAAIQ,KAAKW,MAAMnB,GAAIK,KAAMG,KAAKW,MAAMd,KAAMR,WAAW,GACtE6B,EAAaE,KAAKD,GAClBnB,KAAKa,SAAS,CAACD,MAAOM,IACtBd,EAAMiB,mB,+BAGF,IAAD,OACDC,EAAWtB,KAAKW,MAAMC,MAAMG,KAAI,SAAA3B,GAAI,OACzC,kBAAC,EAAD,CACAmC,IAAOnC,EAAKI,GACZJ,KAAMA,EACNG,aAAc,EAAKA,kBACpB,OACC,yBAAKN,UAAY,aAChB,0CACA,kBAAC,EAAD,CAASkB,MAAOH,KAAKW,MAAMd,KAAMQ,kBAAmBL,KAAKK,kBAAmBJ,aAAcD,KAAKC,eAC9FqB,O,GArDchB,IAAMC,WCAxBiB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.aabc5f5d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction TodoItem(props){\r\n\tconst completedStyle = {\r\n\t\tfontStyle: \"italic\",\r\n\t\tcolor: \"#cdcdcd\",\r\n\t\ttextDecoration: \"line-through\"\r\n\t}\r\n\treturn(\r\n\t\t<div className='todo-item' >\r\n \t\t\t<input type='checkbox'\r\n \t\t\tchecked = {props.item.completed} \r\n \t\t\tonChange = {() => props.handleChange(props.item.id)}/>\r\n \t\t\r\n \t\t\t<p style={props.item.completed? completedStyle : null}>{props.item.text}</p>\r\n \t\t</div>\r\n\t\t)\r\n\r\n}\r\n\r\nexport default TodoItem","import React from 'react'\r\n\r\nclass AddItem extends React.Component{\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t <form onSubmit={this.props.handleSubmit}>\r\n\t\t\t<input type= \"text\"\r\n\t\t\tplaceholder=\"Add new item\"\r\n\t\t\tvalue={this.props.value}\r\n\t\t\tonChange={(event) => this.props.handleValueChange(event)} \r\n\t\t\t/>\r\n\t\t\t<input type=\"submit\" value=\"Enter\" />\r\n\t\t\t</form>\r\n\t\t\t)}\r\n}\r\n\r\nexport default AddItem","const todosData = []\r\n\r\nexport default todosData;\r\n","import React from 'react'\r\nimport TodoItem from './components/TodoItem'\r\nimport AddItem from './components/AddItem'\r\nimport todosData from './todoData'\r\n\r\nclass App extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleValueChange = this.handleValueChange.bind(this);\r\n    \tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.state = {\r\n\t\t\tid: 1,\r\n    \t\ttext:'',\r\n\t\t\ttodos: todosData\r\n\t\t}\r\n\t}\r\n\t\r\n\t handleChange(id) {\r\n        this.setState(prevState => {\r\n            const updatedTodos = prevState.todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed\r\n                    }\r\n                }\r\n                return todo\r\n            })\r\n            return {\r\n                todos: updatedTodos\r\n            }\r\n        })\r\n    }\r\n\r\n    handleValueChange(event) {\r\n    this.setState({text: event.target.value});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n  \t\t this.setState((prevState) => ({id: prevState.id + 1}));\r\n  \t\t const updatedTodos = [...this.state.todos]\r\n  \t\t const newTodo = {id: this.state.id, text: this.state.text, completed: false }\r\n  \t\t updatedTodos.push(newTodo)\r\n  \t\t this.setState({todos: updatedTodos})\r\n     event.preventDefault();        \r\n  }\r\n\r\nrender(){\r\n\tconst todoItem = this.state.todos.map(item =>\r\n\t\t<TodoItem\r\n\t\tkey = {item.id}\r\n\t\titem={item}\r\n\t\thandleChange={this.handleChange} />)\r\n\treturn(\r\n\t\t<div className = 'todo-list'>\r\n\t\t\t<h1>To-do List</h1>\r\n\t\t\t<AddItem value={this.state.text} handleValueChange={this.handleValueChange} handleSubmit={this.handleSubmit}/>\r\n\t\t\t{todoItem}\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\n}\r\n\r\nexport default App\r\n\r\n  //my own, works well\r\n\t// handleChange(id){\r\n\t// \tconst updatedTodos = this.state.todos.map(todo =>{\r\n\t// \t\tif(todo.id === id){\r\n\t// \t\t\treturn {\r\n //            ...todo,\r\n //             completed: !todo.completed\r\n //                    }\r\n\t// \t\t}\r\n\t// \t\treturn todo\r\n\t// \t})\r\n\t// \tthis.setState({\r\n\t// \t\ttodos: updatedTodos\r\n\t// \t});\r\n\t// \t}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'));\r\n"],"sourceRoot":""}